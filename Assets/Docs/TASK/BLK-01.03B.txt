Cursor Prompt — BLK-01.03B — HUD & Visuals (Plant Growth)
0) Contesto (da leggere prima di codare)

Scena unica verticale SCN_VaultMap con SYS_GameManager (giorni/azioni/CRY) ed eventi OnDayChanged / OnActionsChanged / OnCRYChanged; BTN_EndDay è già operativo.

BLK-01.03A (Growth Core) è attivo: PlantGrowthSystem, PlantGrowthConfig (SO), PotGrowthController, estensioni PotStateModel, eventi OnPlantGrew/OnPlantStageChanged. Questo task aggiunge HUD + feedback visivi senza toccare il core. (Resta valido il costo giornaliero corrente e il loop End Day).

Linee guida UI: HUD con indicatori costanti (tempo/giorno, slot azioni, energia) e pulsanti rapidi; qui estendiamo il widget dei vasi per mostrare stadio e progresso.

Design crescita: 3 stadi (Germoglio → Crescita → Maturità), durata media ~5 giorni con cura ideale; i placeholder grafici sono ammessi nella fase blocking.

Obiettivo: visualizzare in modo chiaro e reattivo stadio e avanzamento della pianta selezionata, con sprite/stile placeholder in scena e widget HUD dedicato, mantenendo intatto il comportamento d’ingresso (UIBlocker).

1) Scope (cosa costruire ORA)

PotHUDWidget++

Aggiungi: Stage label, Stage icon, Progress bar 0–100% (intra-stage), PotId attivo.

Aggiorna in tempo reale su: OnPotStateChanged, OnPlantGrew, OnPlantStageChanged, cambio selezione.

Stage Sprites/Visuals (placeholder)

Sprite swap per 4 stati: Empty/Seed/Sprout/Mature + lieve scale bump per leggibilità.

Aggancia a PotGrowthController.UpdateVisuals() senza duplicare logica core.

Debug Hotkeys (dev-only)

G = simula End Day (raise evento)

H = Water pot selezionato

L = Light pot selezionato

P = Plant su pot selezionato
(Solo in Editor/Development build)

QA & No-Regressions

Conferma che i click su HUD non muovono il player (UIBlocker) e che BTN_EndDay resta sempre attivo.

Fuori scope: pH Dome, variety catalog, persistenza salvataggi (arriveranno in task successivi).

2) Struttura file, naming, cartelle

UI

Assets/_Project/Scripts/UI/PotHUDWidget.cs (estendere)

Assets/_Project/UI/POT_HUD_Widget.prefab (nuovo, se non già presente)

Growth visuals

Assets/_Project/Scripts/Dome/PotSystem/Growth/PotGrowthController.cs (estendere solo parte visual)

Assets/_Project/Placeholders/Plants/PLANT_Stage0.png

Assets/_Project/Placeholders/Plants/PLANT_Stage1.png

Assets/_Project/Placeholders/Plants/PLANT_Stage2.png

Assets/_Project/Placeholders/Plants/PLANT_Stage3.png

Debug

Assets/_Project/Scripts/Dev/GrowthDebugHotkeys.cs (nuovo)

Enum di riferimento:

public enum PlantStage { Empty=0, Seed=1, Sprout=2, Mature=3 }

3) Logica di binding (HUD)

Progress %:

se Stage == Seed → pct = GrowthPoints / cfg.pointsSeedToSprout

se Stage == Sprout → pct = GrowthPoints / cfg.pointsSproutToMature

se Stage == Mature → pct = 1f (100%)

Stage label/icon: mappa 1:1 (Empty/Seed/Sprout/Mature).

Selezione vaso: mostra dati del vaso selezionato; se nessun vaso è selezionato, collassa/oscura il widget.

Subscrizioni:

PotEvents.OnPotSelected       += UpdateForSelection;
PotEvents.OnPotStateChanged   += UpdateForState;
PotEvents.OnPlantGrew         += UpdateForGrowth;
PotEvents.OnPlantStageChanged += UpdateForStage;


Tutte le letture arrivano da PotStateModel; i threshold da PlantGrowthConfig via PotSystemConfig.Instance.DefaultGrowthConfig.

4) Visuals in scena (sprite & scale)

In PotGrowthController aggiungi referenze opzionali:

[SerializeField] SpriteRenderer plantRenderer;
[SerializeField] Sprite s0_empty, s1_seed, s2_sprout, s3_mature;


UpdateVisuals():

swap sprite per stato,

transform.localScale = 1.00f / 1.05f / 1.12f / 1.20f su Empty/Seed/Sprout/Mature,

nessun hard-path; assegna via Inspector o bootstrap.

Nota: placeholder coerenti con asset list del Blocking (3 stadi minimi + empty).

5) Debug Hotkeys (Editor only)

GrowthDebugHotkeys.cs (attach a APP_Root):

G → GameManager.EndDay()

H → PotActions.DoWater(selectedPot)

L → PotActions.DoLight(selectedPot)

P → PotActions.DoPlant(selectedPot)
Stampa log prefissati [BLK-01.03B].

6) Implementazione (step-by-step)

Estendi PotHUDWidget: crea Image (icon), TextMeshProUGUI (stage/potId), Slider (progress). Esporre Bind(PotStateModel state, PlantGrowthConfig cfg).

Wire eventi: nel controller UI che già riceve selezione vaso, sottoscrivi gli eventi PotEvents ed esegui Bind(...) al cambio.

Calcolo progress: leggi GrowthPoints + thresholds da PlantGrowthConfig. Se Mature, progress=100%.

Sprites: in PotGrowthController completa UpdateVisuals(); richiamala in AdvanceTo(...) (già in A) e quando il pot passa a Seed.

UIBlocker: verifica che i pulsanti/slider del widget non provochino movimento player (il check è già integrato: non rimuovere).

Debug: crea GrowthDebugHotkeys e logga azioni/tick; non inclusa in build release.

Prefab: salva POT_HUD_Widget.prefab con ancoraggi responsivi; collegalo al Canvas HUD.

7) Criteri di Accettazione (tutti obbligatori)

Widget attivo: Selezionando un vaso, il widget mostra PotId, Stage e Progress % coerenti col modello; deselezionando si nasconde.

Progress corretto: con cura ideale quotidiana, la barra passa Seed→Sprout→Mature entro ~5 giorni (config default).

Sprite & scale: lo sprite cambia a ogni stadio e la scala aumenta leggermente; nessun null-ref se mancano sprite (fallback sicuro).

Event-driven: Progress/Stage si aggiornano senza polling quando arrivano OnPlantGrew/OnPlantStageChanged.

Debug: i tasti G/H/L/P producono log [BLK-01.03B] e permettono test rapido.

No regressioni: BTN_EndDay resta sempre cliccabile; i click sul widget non muovono il player (UIBlocker).

8) Test Plan (rapido)

T1 — Ideal Care UI: Plant → (Water+Light) × 2 → End Day ogni volta ⇒ la Progress bar avanza e su cambio stadio lo Stage e l’Icona cambiano.

T2 — Mature: prosegui fino a Mature (~5 giorni) ⇒ progress=100%, sprite finale, label corretta.

T3 — Dual Pots: gestisci POT-001 (ideale) e POT-002 (parziale) ⇒ widget riflette sempre il pot selezionato.

T4 — Hotkeys: usa G/H/L/P per validare il flusso senza HUD azioni.

T5 — Non-Regression: spamma click sul widget ⇒ player immobile; End Day sempre attivo.

9) Deliverables

Codice: PotHUDWidget.cs (esteso), PotGrowthController.cs (visual), GrowthDebugHotkeys.cs.

Prefab/UI: POT_HUD_Widget.prefab con icon/label/slider.

Asset: 4 sprite placeholder in Placeholders/Plants/.

Doc: README_BLK-01.03B.md (setup, parametri, eventi, test T1–T5).

Changelog: voce BLK-01.03B (data, autore, sintesi).

Done = tutti i Criteri di Accettazione verdi, nessuna regressione su input ed economia, UI reattiva su eventi.