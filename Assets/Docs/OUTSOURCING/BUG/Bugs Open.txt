-------------------------------------------------------------------
Title (ID):
ECO-01.00 ‚Äî Economy Engine Update (Actions ‚â† CRY)

Context:
Latest GDD18 changes the economy model: Dome/Lab/Seed Storage use only Actions (no CRY), CRY is reserved for structural/extraordinary costs (elevator, daily power, repairs, mold sterilization). Current build still reflects mixed costs in several places and UI text inherited from previous reports. Please align the game behavior, UI, and copy to the new model and provide a short implementation report at the end.

Actions cost model

Plant, Water, Light (Dome): consume 1 Action each, 0 CRY.

Lab minigames (microscope & co.): 1 Action, 0 CRY.

Seed Storage (deposit/withdraw): 1 Action, 0 CRY.

Do not deduct CRY anywhere for the above.

CRY-only costs

Elevator use: ‚Äì5 CRY (keep it configurable).

Daily power consumption at End Day: ‚Äì20 CRY (configurable).

Repairs/sabotage/mold sterilization: keep CRY values as currently defined ranges (e.g., ‚Äì30/80 CRY, ‚Äì50/100 CRY).

HUD & Copy

HUD must clearly separate: ‚ÄúActions remaining‚Äù vs ‚ÄúCRY total‚Äù.

Remove/adjust any tooltip, hint, or label implying CRY cost for base actions or lab/storage usage.

Tutorial/Day texts: introduce CRY as structural/energy resource (not as cost for daily actions).

Saves & Compatibility

Existing saves must not soft-lock the player after the change: legacy negative/low CRY states should still allow performing base actions (since they cost only Actions now).

Telemetry/Logs (lightweight)

Add minimal logs or counters (if already present) to confirm at runtime that base actions deduct only Actions and never CRY.

Repro Steps (to verify the change)

Start a fresh run with default starting resources.

Select a Pot, execute Plant, then Water, then Light in the same day.

Enter Lab, start a minigame once.

Use Seed Storage once (deposit or withdraw).

Trigger End Day.

Use Elevator in/out of the engagement zone.

Expected Behavior (pass/fail)

Steps 2‚Äì4: each operation reduces Actions by 1, CRY unchanged.

Step 5: ‚Äì20 CRY (daily power) applied once per End Day.

Step 6: ‚Äì5 CRY per elevator usage.

HUD shows correct remaining Actions and CRY totals at all times.

No UI hint/tutorial text claims CRY is required for base actions.

Acceptance Criteria / DoD

‚úÖ All base actions (Dome/Lab/Seed) cost Actions-only across the whole loop.

‚úÖ Elevator and daily power costs correctly consume CRY; values are configurable.

‚úÖ HUD & tooltips reflect the new model; no leftover copy suggesting CRY on base actions.

‚úÖ End Day applies exactly one daily power charge (no double charges).

‚úÖ Existing saves remain playable; performing base actions is possible at 0 CRY.

‚úÖ No console errors/warnings related to economy after the changes.

Test Plan (functional)

Day 1

Plant ‚Üí Water ‚Üí (Light disabled if no plant image/stage yet, else enabled by design)

Verify: Actions go down; CRY unchanged.
Day 2

Water + Light; Lab minigame √ó1; Seed Storage deposit/withdraw √ó1 ‚Üí Actions reduce accordingly; CRY unchanged.

End Day ‚Üí CRY ‚Äì20.
Elevator

Enter elevator zone, press +1 / ‚Äì1 / 0 (or W/S mappings as available) ‚Üí each travel costs ‚Äì5 CRY.
Regression

Rapid selections on Pots do not reintroduce wrong costs; HUD remains in sync.
----------------------------------------------------------------------------------

üêõ Bug Briefing ‚Äî Pot Growth System
Task ID

BLK-01.04 ‚Äî Pot Growth Visualization & Points Counter Issues

üîÅ Repro Steps

Launch the game in Unity and open scene SCN_VaultMap.

Select POT-001 and plant a seed (Stage = Seed).

Advance days using EndDay while applying Water and/or Light actions.

Observe both the plant‚Äôs visual placeholder and the growth points counter.

‚ö†Ô∏è Observed Behavior

Bug #1 (Visual Placeholder):
POT-001 does not update its placeholder image when the plant stage changes. It always shows the Seed sprite, even after the plant should be at Sprout or Mature.

Bug #2 (Growth Points Counter):
When performing Water or Light actions, the growth points counter does not update. The HUD continues to show the initial value instead of incrementing.

üéØ Expected Behavior

Bug #1: Whenever the plant stage changes (Seed ‚Üí Sprout ‚Üí Mature), the placeholder image should also update in the scene and HUD accordingly.

Bug #2: After each valid action (Water, Light), growth points should increment based on the rules in PlantGrowthConfig, and the HUD should immediately reflect the updated value.

üì¶ Deliverables

Fix in PotGrowthController to correctly switch placeholder sprites when advancing stages.

Fix in PotStateModel (or related systems) to ensure growth points increment on actions and trigger OnPotStateChanged.

HUD integration: ensure that updated stage and growth points are displayed consistently.

Add debug logs for verification:

[PotGrowth] POT-001 advanced to Stage 2 (Sprout)

[PotGrowth] POT-001 GrowthPoints = X.

‚úÖ Definition of Done

Visual placeholder updates correctly at each stage transition.

Growth points increment correctly after actions and HUD updates in real time.

Console shows clear debug logs for stage changes and point updates.

No errors or warnings in Unity Console.


----------------------------------------------------------------------------


üìù Task: Add Player Navigation with WASD

ID: BLK-00.04C

üéØ Context

Currently, the Player character can move only using the click-to-move system (implemented in BLK-00.04). For better usability and testing, we also want to allow direct movement using WASD keys (W = Up, A = Left, S = Down, D = Right).

This will give us two parallel navigation systems:

Point & Click (already working).

WASD keyboard input (to be added).

üîÑ Repro Steps (Current Behavior)

Enter Play Mode.

Click on the floor ‚Üí Player moves to that position.

Try pressing W, A, S, D ‚Üí nothing happens.

‚úÖ Expected Behavior

Player can still move with click-to-move exactly as now.

Player can also move using WASD keys:

W ‚Üí move up

A ‚Üí move left

S ‚Üí move down

D ‚Üí move right

Both systems should co-exist without conflicts.

Animations (Idle/Walk) must trigger correctly with WASD input, same as click movement.

üìã Acceptance / DoD

WASD movement added, smooth and functional.

Click-to-move continues to work as before.

No UI conflicts or console errors.

Player animations work with both movement methods.

New code integrated into existing PlayerController or equivalent script.

üå± Branch & Deliverables

Branch: feature/BLK-00.04C-WASD

Deliverables:

Updated Player movement script.

Commit message referencing BLK-00.04C.

Short report: approach taken, files modified, testing performed.

-----------------------------------------------------------------
üìù Task: Elevator Modifications

ID: BLK-ELV-002

üéØ Goal

Improve the elevator with clearer visuals and more intuitive controls, keeping the player always visible.

üìã What Needs to Change

Elevator Doors

Add a placeholder door graphic at each floor, so the player clearly sees the elevator entrance.

Floor Buttons UI

When the player enters the elevator, remove the full white screen overlay.

The floor buttons (+1 / 0 / ‚Äì1) should appear next to the character (to the side, not on top), so they never cover the player.

Keyboard Controls

Inside the elevator, pressing W should work as the +1 button.

Pressing S should work as the ‚Äì1 button.

The 0 button remains available through the UI.

Dome Graphics

Add the PNG graphics (if they fit, otherwise please use placeholder with similar characteristcs) provided for the elevator inside the Dome room (where the Pots are), integrated without covering other elements.

‚úÖ Acceptance Criteria

Doors are visible at every floor.

Floor buttons never cover the player and remain clear.

W = go up, S = go down, 0 = via UI.

The Dome elevator shows the provided graphics.

Player movement is not blocked even when the elevator UI is visible.


----------------------------------------------------------------
Task Briefing ‚Äì BLK-01.05

Context:
We are in the Blocking_01 phase of the Sporium project (Unity 2D URP).
Previous tasks (BLK-01.01 ‚Üí BLK-01.04) implemented:

Player navigation (CLICK + WASD) and interaction

Pot selection system + HUD with Plant/Water/Light actions

Growth system across multiple days with EndDay logic

Elevator placeholder with basic floor navigation

Task ID: BLK-01.05
Title: Integrate HUD feedback + Growth progression consistency

Repro Steps

Start the game and select a Pot.

Perform actions (Plant, Water, Light) during Day 1 and Day 2.

End the Day and continue for 3‚Äì4 cycles.

Observe HUD, Pot visuals, and Player interaction flow.

Issues / Missing behaviors

Pot placeholder does not update consistently when plant status changes.

When actions are performed (Water, Light), HUD counters do not always update immediately.

Action buttons sometimes remain green (active) after being clicked, instead of turning inactive until the next Day.

In Day 1, ‚ÄúLight‚Äù is available even if no plant is present yet (it should not be).

After Day 2, ‚ÄúPlant‚Äù button should disappear but correct actions should remain available.

Expected Behavior

Pot placeholder should correctly update for each growth stage (Seed ‚Üí Sprout ‚Üí Mature).

When an action is used, the button must deactivate until the next Day.

HUD counters (Actions left, CRY points) must refresh instantly after each action.

Action availability must follow logic:

Day 1: Plant + Water only.

Day 2: Water + Light (Plant disabled).

Day 3+: Water + Light remain, with proper stage progression.

EndDay should always advance plant growth when the correct actions were performed.

Acceptance Criteria / DoD

All HUD updates are real-time and consistent with actions.

Growth stages always match the number of Days and care actions.

No action button remains stuck as active after being used.

Console shows no warnings/errors during these sequences.


--------------------------------------------------------------------
üè∑Ô∏è Task

BLK-02.01 ‚Äî Microscope: Basic Minigame Implementation

üìñ Context

The project is Sporium, a Unity 2D URP (2022.3 LTS) game in development.

Current state: Blocking_01 completed ‚Üí the Dome system is functional (pots, actions, growth, HUD, economy CRY).

We are now starting Blocking_02: Laboratory features.

This task introduces the Microscope as the first interactive object of the Lab.

Later tasks (BLK-02.02 ‚Üí 02.04) will expand it to combine spores and produce seeds. For now, we only want the minigame skeleton.

üêû Repro Steps / Expected Flow

Player enters the Laboratory room (already exists as placeholder).

Player clicks on the Microscope object (placeholder grey block).

A UI panel opens with:

A horizontal bar (placeholder).

A moving cursor sliding left ‚Üí right.

A highlighted target zone (placeholder).

Player must click when the cursor overlaps the target zone.

‚úÖ Expected Behavior

Success: click inside target ‚Üí ‚ÄúAnalysis Successful‚Äù (placeholder text).

Failure: click outside ‚Üí ‚ÄúAnalysis Failed‚Äù (placeholder text), retry possible.

Economy: Each attempt consumes ‚Äì2 CRY from the player (integrated with GameManager economy).

End of minigame: only message feedback, no seeds or inventory updates yet (will come with BLK-02.03).

UI/UX: Placeholder graphics are fine (grey block, simple bar + cursor).

üìã Acceptance Criteria (DoD)

Microscope can be clicked and opens the UI.

Cursor moves automatically across the bar.

Click detection works ‚Üí success or fail.

CRY is reduced by 2 for each use.

Message feedback is displayed correctly.

System can be closed and retried without breaking gameplay.

üß™ Test Plan

Enter Lab ‚Üí click microscope ‚Üí UI opens.

Test click inside target ‚Üí success message, ‚Äì2 CRY deducted.

Test click outside target ‚Üí fail message, ‚Äì2 CRY deducted.

Test retry works multiple times in the same day.

Verify CRY does not go below zero (if no resources, usage should be blocked).

Confirm console has no warnings/errors.

üìå Notes for Delivery

Branch: blocking/BLK-02.01-microscope

Deliverables: Updated Unity scene, new scripts/prefabs for microscope and UI.

Report Required: Please describe in short:

How you implemented the system.

Files/scripts created or modified.

Tests you performed.

---------------------------------------------------------------------------------------


üì¶ Deliverables

Updated prefab(s) and animation controller for Player.

Commit & PR with list of modified files.

Final Report (mandatory) including:

Approach used (asset chosen, setup in Unity).

Files modified/created (scripts, prefabs, animator).

Tests performed to ensure correct behavior.

Any limitations or notes for future improvement.

Screenshots or short video of the Player in Play mode.